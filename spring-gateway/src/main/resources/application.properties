server.port=9095

# ### Eureka
spring.application.name=api-gateway
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka





# #### Routing

# ### Product Service Route
# ## Definimos las rutas para este MS en 1 Array
spring.cloud.gateway.routes[0].id=product-service
# lb permite el   LoadBalancing    en auto x la API Gateway
spring.cloud.gateway.routes[0].uri=lb://product
# podemos definir multiples predicates. Enrutara c/predicate al .uri
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/products


# ### Order Service Route
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/orders





# ### Eureka Server Route: 1 uso d los    filters   tb es para cambiar el url, ademas del Auth
# ## NOOO trae los   Static Resources    like CSS and JS, only HTML
spring.cloud.gateway.routes[2].id=eureka-server
# como solo hay 1 instancia de eureka, NO usamos  lb  (load balancing)
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web

# ## Filter to change URL so no concat the uri+path 'cause eureka server UI runs on / and not on /eureka/web
# Override final path (uri+predicate) to this SetPath
spring.cloud.gateway.routes[2].filters[0]=SetPath=/


# ### Eureka Server Route for   Static Resources     . Aqui ya NOOO necesitamos el Filter
spring.cloud.gateway.routes[3].id=eureka-server-static
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**







# ## Logging Req in Gateway to knows more about reqs
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinition=INFO
logging.level.org.springframework.cloud.gateway=TRACE

